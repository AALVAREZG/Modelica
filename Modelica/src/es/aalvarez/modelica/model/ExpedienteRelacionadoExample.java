package es.aalvarez.modelica.model;

import java.util.ArrayList;
import java.util.List;

public class ExpedienteRelacionadoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public ExpedienteRelacionadoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdrelacionIsNull() {
			addCriterion("idRelacion is null");
			return (Criteria) this;
		}

		public Criteria andIdrelacionIsNotNull() {
			addCriterion("idRelacion is not null");
			return (Criteria) this;
		}

		public Criteria andIdrelacionEqualTo(Integer value) {
			addCriterion("idRelacion =", value, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionNotEqualTo(Integer value) {
			addCriterion("idRelacion <>", value, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionGreaterThan(Integer value) {
			addCriterion("idRelacion >", value, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionGreaterThanOrEqualTo(Integer value) {
			addCriterion("idRelacion >=", value, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionLessThan(Integer value) {
			addCriterion("idRelacion <", value, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionLessThanOrEqualTo(Integer value) {
			addCriterion("idRelacion <=", value, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionIn(List<Integer> values) {
			addCriterion("idRelacion in", values, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionNotIn(List<Integer> values) {
			addCriterion("idRelacion not in", values, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionBetween(Integer value1, Integer value2) {
			addCriterion("idRelacion between", value1, value2, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdrelacionNotBetween(Integer value1, Integer value2) {
			addCriterion("idRelacion not between", value1, value2, "idrelacion");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaIsNull() {
			addCriterion("idExpedienteA is null");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaIsNotNull() {
			addCriterion("idExpedienteA is not null");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaEqualTo(Integer value) {
			addCriterion("idExpedienteA =", value, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaNotEqualTo(Integer value) {
			addCriterion("idExpedienteA <>", value, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaGreaterThan(Integer value) {
			addCriterion("idExpedienteA >", value, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaGreaterThanOrEqualTo(Integer value) {
			addCriterion("idExpedienteA >=", value, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaLessThan(Integer value) {
			addCriterion("idExpedienteA <", value, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaLessThanOrEqualTo(Integer value) {
			addCriterion("idExpedienteA <=", value, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaIn(List<Integer> values) {
			addCriterion("idExpedienteA in", values, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaNotIn(List<Integer> values) {
			addCriterion("idExpedienteA not in", values, "idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaBetween(Integer value1, Integer value2) {
			addCriterion("idExpedienteA between", value1, value2,
					"idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedienteaNotBetween(Integer value1,
				Integer value2) {
			addCriterion("idExpedienteA not between", value1, value2,
					"idexpedientea");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebIsNull() {
			addCriterion("idExpedienteB is null");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebIsNotNull() {
			addCriterion("idExpedienteB is not null");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebEqualTo(Integer value) {
			addCriterion("idExpedienteB =", value, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebNotEqualTo(Integer value) {
			addCriterion("idExpedienteB <>", value, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebGreaterThan(Integer value) {
			addCriterion("idExpedienteB >", value, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebGreaterThanOrEqualTo(Integer value) {
			addCriterion("idExpedienteB >=", value, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebLessThan(Integer value) {
			addCriterion("idExpedienteB <", value, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebLessThanOrEqualTo(Integer value) {
			addCriterion("idExpedienteB <=", value, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebIn(List<Integer> values) {
			addCriterion("idExpedienteB in", values, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebNotIn(List<Integer> values) {
			addCriterion("idExpedienteB not in", values, "idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebBetween(Integer value1, Integer value2) {
			addCriterion("idExpedienteB between", value1, value2,
					"idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andIdexpedientebNotBetween(Integer value1,
				Integer value2) {
			addCriterion("idExpedienteB not between", value1, value2,
					"idexpedienteb");
			return (Criteria) this;
		}

		public Criteria andDescripcionIsNull() {
			addCriterion("descripcion is null");
			return (Criteria) this;
		}

		public Criteria andDescripcionIsNotNull() {
			addCriterion("descripcion is not null");
			return (Criteria) this;
		}

		public Criteria andDescripcionEqualTo(String value) {
			addCriterion("descripcion =", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotEqualTo(String value) {
			addCriterion("descripcion <>", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionGreaterThan(String value) {
			addCriterion("descripcion >", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
			addCriterion("descripcion >=", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLessThan(String value) {
			addCriterion("descripcion <", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLessThanOrEqualTo(String value) {
			addCriterion("descripcion <=", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionLike(String value) {
			addCriterion("descripcion like", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotLike(String value) {
			addCriterion("descripcion not like", value, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionIn(List<String> values) {
			addCriterion("descripcion in", values, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotIn(List<String> values) {
			addCriterion("descripcion not in", values, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionBetween(String value1, String value2) {
			addCriterion("descripcion between", value1, value2, "descripcion");
			return (Criteria) this;
		}

		public Criteria andDescripcionNotBetween(String value1, String value2) {
			addCriterion("descripcion not between", value1, value2,
					"descripcion");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table modlic_exprelacionados
	 * @mbggenerated  Fri Jan 22 20:29:47 CET 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table modlic_exprelacionados
     *
     * @mbggenerated do_not_delete_during_merge Mon Dec 28 18:33:53 CET 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}